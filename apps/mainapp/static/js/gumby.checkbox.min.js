!function(e){"use strict";function t(e){Gumby.debug("Initializing Checkbox",e);this.$el=e;this.$input=this.$el.find("input[type=checkbox]");var t=this;this.$el.on(Gumby.click,function(e){e.preventDefault();if(t.$input.is("[disabled]")){return}if(t.$el.hasClass("checked")){t.update(false)}else{t.update(true)}}).on("gumby.check",function(){Gumby.debug("Check event triggered",t.$el);t.update(true)}).on("gumby.uncheck",function(){Gumby.debug("Uncheck event triggered",t.$el);t.update(false)});if(this.$input.prop("checked")||this.$el.hasClass("checked")){t.update(true)}}t.prototype.update=function(e){var t=this.$el.find("span");if(e){Gumby.debug("Checking Checkbox",this.$el);t.append('<i class="icon-check" />');this.$input.prop("checked",true);Gumby.debug("Triggering onCheck event",this.$el);Gumby.debug("Triggering onChange event",this.$el);this.$el.addClass("checked").trigger("gumby.onCheck").trigger("gumby.onChange")}else{Gumby.debug("Unchecking Checkbox",this.$el);this.$input.prop("checked",false);t.find("i").remove();Gumby.debug("Triggering onUncheck event",this.$el);Gumby.debug("Triggering onChange event",this.$el);this.$el.removeClass("checked").trigger("gumby.onUncheck").trigger("gumby.onChange")}};Gumby.addInitalisation("checkbox",function(){e(".checkbox").each(function(){var n=e(this);if(n.data("isCheckbox")){return true}n.data("isCheckbox",true);new t(n)})});Gumby.UIModule({module:"checkbox",events:["onCheck","onUncheck","onChange","check","uncheck"],init:function(){Gumby.initialize("checkbox")}})}(jQuery)